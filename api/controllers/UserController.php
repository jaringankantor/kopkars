<?php

namespace api\controllers;

use yii;
use api\models\LoginForm;
use yii\helpers\ArrayHelper;
use yii\filters\auth\QueryParamAuth;
use yii\rest\ActiveController;



class UserController extends ActiveController
{
    public $modelClass = 'api\models\User';

    public function actions()
    {
        $action= parent::actions(); // TODO: Change the autogenerated stub
        unset($actions['index']);
        unset($actions['view']);
        unset($actions['create']);
        unset($actions['update']);
        unset($actions['delete']);
        unset($actions['options']);
    }

    public function behaviors()
    {
        return ArrayHelper::merge(parent::behaviors(), [
            'authenticator' => [
                'class'=> QueryParamAuth:: class, // Implementing access token authentication
                'except'=> ['login'], /// There is no need to validate the access token method. Note the distinction between $noAclLogin
            ]
        ]);
    }

    public function actionTest()
    {
        return ['status'=>'success'];
    }

    /**
     * landing
     * @return array
     * @throws \yii\base\Exception
     * @throws \yii\base\InvalidConfigException
     */
    public function actionLogin()
    {
        $model = new LoginForm();
        $model->scenario = 'api-login-user';

        if ($model->load(Yii::$app->getRequest()->getBodyParams(),'') && $model->login()) {
            
            return [
                'access_token' => $model->login(),
            ];
        } else {
            return $model->getFirstErrors();
        }
    }
}